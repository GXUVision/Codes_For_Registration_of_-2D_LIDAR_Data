

function [setOut]=CoordinateTran(setIn)
%*********************************************************************
%*********************************************************************
%*********************************************************************
%函数功能：坐标变换，将极坐标系数据转化为笛卡尔坐标系数据
%输入：两个探测点坐标 (xP,yP）和（xX,yX）
%          数据采样点数 samples
%输出:1个4×1矩阵set
%setIn=  |rangeP|         setOut=| xP  |
%        |thetaP|                | yP  |
%        |rangeX|                | xX  |
%        |thetaX |                      | yX  |              
%其中,(xP,yP)为待匹配点集，(xX,yX)模板点集
%	    (rangeP,thetaP)为待匹配点集，(rangeX,thetaX)模板点集
%       矩阵setOut数据基于极坐标系
%       矩阵setIn数据基于笛卡尔坐标系
%作者：Shaofeng Wu 
%时间：2017.11.28
%*********************************************************************
%*********************************************************************
%*********************************************************************
%*********************************************************************
%*********************************************************************
%Step:1：更改激光测距仪位置，得到两组对应点集
% [rangeInit,thetaInit]=GetLaserDataPointSet(280,280,120);
% [range,theta]=GetLaserDataPointSet(300,280,120);
%setIn=  |rangeP|         setOut=| xP  |
%            |thetaP |                      | yP  |
%            |rangeX|                      | xX  |
%            |thetaX |                      | yX  |
rangeP=setIn(1,:);
thetaP=setIn(2,:);
rangeX=setIn(3,:);
thetaX=setIn(4,:);
%*********************************************************************
%*********************************************************************
%Step1：将数据点由极坐标系转化为笛卡尔坐标系
alphaP=thetaP*pi/180;             %角度制转为弧度制
alphaX=thetaX*pi/180;             %角度制转为弧度制


%*********************************************************************
%*********************************************************************
%Step2：坐标转换计算
xP=zeros(size(thetaP));              %设置一个大小和Theta一样的向量
yP=zeros(size(thetaP));              %设置一个大小和Theta一样的向量
xX=zeros(size(thetaX));              %设置一个大小和Theta一样的向量
yX=zeros(size(thetaX));              %设置一个大小和Theta一样的向量
for m = 1:length(thetaP)
    xP(m)=rangeP(m)*cos(alphaP(m));
    yP(m)=rangeP(m)*sin(alphaP(m));
    xX(m)=rangeX(m)*cos(alphaX(m));
    yX(m)=rangeX(m)*sin(alphaX(m));

end

setOut=[xP;yP;xX;yX];









